import { IFocusable, IKeyboardStatus, KeyboardMapToken } from '../input';
export declare function registerFocusable(focusable: IFocusable): void;
export declare function registerFocusables(focusables: IFocusable[]): void;
export declare function registerFocusables(...focusables: IFocusable[]): void;
export declare function unregisterFocusable(focusable: IFocusable): void;
export declare function unregisterFocusables(focusables: IFocusable[]): void;
export declare function unregisterFocusables(...focusables: IFocusable[]): void;
export declare function unregisterAllFocusables(): void;
export declare function clearFocus(): void;
export declare function forceFocus(focusable: IFocusable): void;
export declare function forceNeighbours(token: KeyboardMapToken | KeyboardMapToken[]): void;
export declare function clearNeighbours(): void;
export declare function getNumKeyboardLayers(): number;
export declare function addKeyboardLayer(): void;
export declare function pushKeyboardLayer(): void;
export declare function removeKeyboardLayer(): void;
export declare function popKeyboardLayer(): void;
export declare function setKeyboardEnabled(enabled: boolean): void;
export declare function getKeyboardStatus(handler: (status: IKeyboardStatus) => void): void;
export declare function updateFocus(): void;
export declare function keyboardReFocus(): void;
export declare function keyboardFocusBegin(focusable: IFocusable): void;
export declare function keyboardFocusEnd(focusable: IFocusable): void;
//# sourceMappingURL=keyboard.d.ts.map