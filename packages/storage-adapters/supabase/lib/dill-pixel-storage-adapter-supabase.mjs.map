{"version":3,"file":"dill-pixel-storage-adapter-supabase.mjs","sources":["../src/index.ts"],"sourcesContent":["import { StorageAdapter, Logger, IApplication } from 'dill-pixel';\nimport { createClient } from '@supabase/supabase-js';\nimport type { SupabaseClient } from '@supabase/supabase-js';\n/**\n * Interface for the options of the supabaseUrlAdapter.\n */\nexport interface ISupabaseAdapterOptions {\n  supabaseUrl: string;\n  anonKey: string;\n}\n\ntype SaveMethod = 'insert' | 'update' | 'upsert';\n\ntype DeleteData = {\n  [key: string]: any;\n};\n\n/**\n * A class representing a storage adapter that uses Supabase.\n */\nexport class SupabaseAdapter<Database = any> extends StorageAdapter {\n  private _options: ISupabaseAdapterOptions;\n  private _supabase: SupabaseClient<Database>;\n\n  /**\n   * Returns the Supabase client.\n   * @returns {SupabaseClient<Database>} The Supabase client.\n   */\n  get client(): SupabaseClient<Database> {\n    return this._supabase as SupabaseClient<Database>;\n  }\n\n  /**\n   * Initializes the adapter.\n   * @param {IApplication} _app The application that the adapter belongs to.\n   * @param {ISupabaseAdapterOptions} options The options to initialize the adapter with.\n   * @returns {void}\n   */\n  public initialize(_app: IApplication, options: ISupabaseAdapterOptions): void {\n    Logger.log('SupabaseAdapter initialized');\n    this._options = options;\n\n    // create the client here\n    this._supabase = createClient<Database>(this._options.supabaseUrl, this._options.anonKey);\n  }\n\n  /**\n   * Saves data to a specified table in the Supabase database.\n   * @param {string} tableId The table to save the data to.\n   * @param {any} data The data to save.\n   * @param {SaveMethod} method The method to use for saving the data.\n   * @returns {any} The saved data.\n   */\n  async save(tableId: string, data: any, method: SaveMethod = 'upsert'): Promise<any> {\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n    const table = this.client.from(tableId);\n    switch (method) {\n      case 'insert':\n        return await table.insert(data).select();\n      case 'update':\n        return await table.update(data).select();\n      case 'upsert':\n        return await table.upsert(data).select();\n    }\n  }\n\n  /**\n   * Loads data from a specified table in the Supabase database.\n   * @param {string} tableId The table from which to load the data.\n   * @param {string[]} selectors The columns to select.\n   * @returns {any} The loaded data.\n   */\n\n  async load(tableId: string, ...selectors: string[]): Promise<any> {\n    return await this.client.from(tableId).select(...selectors);\n  }\n\n  /**\n   * Deletes data from a specified table in the Supabase database.\n   * @param {string} tableId The table from which to load the data.\n   * @param {DeleteData} data The data to delete.\n   * @returns {any} The deleted data.\n   */\n\n  async delete(tableId: string, data: DeleteData): Promise<any> {\n    const column = Object.keys(data)[0];\n    const value = data[column];\n    return await this.client.from(tableId).delete().eq(column, value).select();\n  }\n}\n"],"names":["SupabaseAdapter","StorageAdapter","_app","options","Logger","createClient","tableId","data","method","table","selectors","column","value"],"mappings":";;AAoBO,MAAMA,UAAwCC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlE,IAAI,SAAmC;AACrC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQO,WAAWC,GAAoBC,GAAwC;AAC5E,IAAAC,EAAO,IAAI,6BAA6B,GACxC,KAAK,WAAWD,GAGhB,KAAK,YAAYE,EAAuB,KAAK,SAAS,aAAa,KAAK,SAAS,OAAO;AAAA,EAC1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,KAAKC,GAAiBC,GAAWC,IAAqB,UAAwB;AAClF,IAAK,MAAM,QAAQD,CAAI,MACrBA,IAAO,CAACA,CAAI;AAEd,UAAME,IAAQ,KAAK,OAAO,KAAKH,CAAO;AACtC,YAAQE,GAAQ;AAAA,MACd,KAAK;AACH,eAAO,MAAMC,EAAM,OAAOF,CAAI,EAAE,OAAO;AAAA,MACzC,KAAK;AACH,eAAO,MAAME,EAAM,OAAOF,CAAI,EAAE,OAAO;AAAA,MACzC,KAAK;AACH,eAAO,MAAME,EAAM,OAAOF,CAAI,EAAE,OAAO;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,KAAKD,MAAoBI,GAAmC;AACzD,WAAA,MAAM,KAAK,OAAO,KAAKJ,CAAO,EAAE,OAAO,GAAGI,CAAS;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,OAAOJ,GAAiBC,GAAgC;AAC5D,UAAMI,IAAS,OAAO,KAAKJ,CAAI,EAAE,CAAC,GAC5BK,IAAQL,EAAKI,CAAM;AACzB,WAAO,MAAM,KAAK,OAAO,KAAKL,CAAO,EAAE,OAAO,EAAE,GAAGK,GAAQC,CAAK,EAAE,OAAO;AAAA,EAC3E;AACF;"}